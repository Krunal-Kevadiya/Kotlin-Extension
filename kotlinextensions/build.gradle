apply plugin: 'com.android.library'
apply plugin: 'kotlin-android' // Enables android kotlin support
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // Enables anotation processor support

kapt {
    generateStubs = true
}

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0.0"
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/kotlin', 'src/main/java']
            assets.srcDirs = ['src/main/assets']
            /*res.srcDirs =
                    [
                        'src/main/res/layouts/items',
                        'src/main/res/layouts/views',
                        'src/main/res'
                    ]*/
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file("$project.rootDir/settings/keystore/debug.keystore")
        }
        release {
            keyAlias 'androidreleasekey'
            keyPassword 'password'
            storePassword 'password'
            storeFile file("$project.rootDir/settings/keystore/release.jks")
        }
    }

    flavorDimensions "mode"
    productFlavors {
        production {
            dimension "mode"
            versionCode readVersionCode("production")
            versionName readVersionName("production")
        }
        qa {
            dimension "mode"
            versionCode readVersionCode("qa")
            versionName readVersionName("qa")
        }
        development {
            dimension "mode"
            versionCode readVersionCode("development")
            versionName readVersionName("development")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguard_list.each { pro_guard ->
                proguardFile pro_guard
            }
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            proguard_list.each { pro_guard ->
                proguardFile pro_guard
            }
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    implementation deps.support.design
    implementation deps.support.v4
    implementation deps.support.card_view

    // Kotlin
    implementation deps.kotlin.stdlib

    // Data Binding
    kapt deps.other.binding

    // Architecture components
    implementation deps.lifecycle.lib
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler

    //Location
    implementation deps.google.location

    // RxJava
    implementation deps.javaxAndRx.java2
    implementation(deps.javaxAndRx.android) {
        exclude group: 'io.reactivex', module: 'rxjava2'
    }
}

def readVersionNameForApk(def buildType = "buildVariant") {
    def version = readVersionFile(buildType)
    return "V${version['VERSION_MAJOR']}.${version['VERSION_MINOR']}.${version['VERSION_PATCH']}(${version['VERSION_CODE']})_${new Date().format("yyyyMMdd_HHmmss", TimeZone.getTimeZone("UTC"))}"
}

def readVersionName(def buildType = "buildVariant") {
    def version = readVersionFile(buildType)
    return "${version['VERSION_MAJOR']}.${version['VERSION_MINOR']}.${version['VERSION_PATCH']}(${version['VERSION_CODE']})"
}

def readVersionCode(def buildType = "buildVariant") {
    def version = readVersionFile(buildType)
    def build = version['VERSION_CODE'] as int
    return build
}

def readCrashlyticsKey() {
    def version = readVersionFile("project")
    return "${version['CRASHLYTICS_KEY']}"
}

def readApplicationId() {
    def version = readVersionFile("project")
    return "${version['APPLICATION_ID']}"
}

ext {
    PUBLISH_GROUP_ID = 'com.kevadiyakrunalk'
    PUBLISH_ARTIFACT_ID = 'kotlinextensions'
    PUBLISH_VERSION = '1.0.0'
}

apply from: '../gradle/android-release-aar.gradle'
